/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.sorted_billing;
//import com.mycompany.sorted_billing.onetime;
//import static com.mycompany.sorted_billing.Adminsignup.gender;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
/**
 *
 * @author HP
 */
public class additems extends javax.swing.JInternalFrame {

    /**
     * Creates new form additems
     */
    public additems() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui=(BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        category = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        items = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Qty = new javax.swing.JTextField();

        setMinimumSize(new java.awt.Dimension(1236, 668));
        setPreferredSize(new java.awt.Dimension(1236, 668));
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jPanel2.setLayout(null);

        jLabel1.setText("category");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(100, 140, 60, 20);

        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });
        jPanel2.add(category);
        category.setBounds(160, 140, 300, 22);

        jLabel2.setText("items");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(100, 270, 40, 16);
        jPanel2.add(items);
        items.setBounds(160, 260, 300, 22);

        add.setText("add");
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel2.add(add);
        add.setBounds(280, 380, 75, 22);

        jLabel4.setText("price");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(100, 300, 50, 16);

        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });
        jPanel2.add(price);
        price.setBounds(160, 300, 300, 22);

        jLabel5.setText("Quatity");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(100, 340, 40, 16);

        Qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QtyActionPerformed(evt);
            }
        });
        jPanel2.add(Qty);
        Qty.setBounds(160, 340, 300, 22);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 1220, 630);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1220, 630);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryActionPerformed

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        // TODO add your handling code here:
       //items.getText();
      
                    
            
             
                
        // 
          
    }//GEN-LAST:event_addMouseClicked

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed

    private void QtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QtyActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
             if(category.getText().isEmpty()){
                 
            JOptionPane.showMessageDialog(rootPane,"Enter category");
             }
                else if(items.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Enter items");
                 }
        
             //price.getText();
             else if(price.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Enter price");
        }
             //Qty.getText();
             else if(Qty.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Enter Qty");
            }
         else{
            String INSERTDB="INSERT INTO inventory(catagory,item, price, Qty) VALUES(?,?,?,?)";
            try{
                PreparedStatement ps=com.mycompany.sorted_billing.ConnectionClass.getInstance().connection.prepareStatement(INSERTDB);
                ps.setString(1, category.getText().toString());
                ps.setString(2, items.getText().toString());
                ps.setString(3, price.getText().toString());
                ps.setString(4, Qty.getText().toString());
                Boolean inventory;
                 inventory = ps.execute();
                }
             catch (SQLException ex) {
                Logger.getLogger(Adminsignup.class.getName()).log(Level.SEVERE, null, ex);
            }
             }
             onetime oot=new onetime();
                    oot.setVisible(true);
                    this.dispose();
        
    }//GEN-LAST:event_addActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Qty;
    private javax.swing.JButton add;
    private javax.swing.JTextField category;
    private javax.swing.JTextField items;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField price;
    // End of variables declaration//GEN-END:variables
        }