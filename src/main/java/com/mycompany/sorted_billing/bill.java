/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.sorted_billing;

import static java.lang.Integer.parseInt;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class bill extends javax.swing.JInternalFrame {

    ArrayList<inventoryModel> inventorylist = new ArrayList<inventoryModel>();
     ArrayList<cartmodel> cartmodellist = new ArrayList<cartmodel>();
        EMPScreenInterface empScreenInterface;
    /**
     * Creates new form bill
     */
    public bill() {
        setUpView();
    }
        
    public bill(EMPScreenInterface empScreenInterface) {
        this.empScreenInterface = empScreenInterface;
        setUpView();
    }
    
    public void setUpView(){
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui=(BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        getProducts();
    }
    
    public void getProducts(){
     final String statement = "SELECT * from inventory";
        try {
            PreparedStatement preparedStatement = ConnectionClass.getInstance().connection.prepareStatement(statement);

            ResultSet resultSet = preparedStatement.executeQuery();
            inventorylist.clear();
            cat.removeAllItems();
            

            while (resultSet.next()) {
                    
                inventoryModel inventorymodel = new inventoryModel();
                inventorymodel.setID(resultSet.getInt("id"));
                inventorymodel.setCatagory(resultSet.getString("catagory"));
                inventorymodel.setItem(resultSet.getString("item"));
                inventorymodel.setQty(resultSet.getString("Qty"));
                inventorymodel.setPrice(resultSet.getString("price"));
                inventorylist.add(inventorymodel);
                cat.addItem(inventorymodel.getCatagory() +  " - " + inventorymodel.getItem());
                 

            }
            
        } catch (SQLException ex) {
            Logger.getLogger(bill.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        billtable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        total = new javax.swing.JLabel();
        cat = new javax.swing.JComboBox<>();
        qty = new javax.swing.JLabel();
        price = new javax.swing.JLabel();
        qty_sel = new javax.swing.JSpinner();
        tprice = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        confirm = new javax.swing.JButton();
        remove = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(1236, 668));
        setPreferredSize(new java.awt.Dimension(1236, 668));

        jPanel1.setBackground(new java.awt.Color(102, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setText("Category");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(80, 30, 60, 20);

        jButton1.setText("place order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(820, 490, 100, 22);

        jScrollPane1.setName(""); // NOI18N

        billtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null},
                {"", null, null}
            },
            new String [] {
                "name", "qty", "total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        billtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billtableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(billtable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(80, 180, 1060, 270);

        jButton2.setText("total");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(710, 490, 72, 22);

        total.setText("0");
        total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(total);
        total.setBounds(80, 480, 480, 30);

        cat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                catItemStateChanged(evt);
            }
        });
        cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catActionPerformed(evt);
            }
        });
        jPanel1.add(cat);
        cat.setBounds(170, 30, 230, 22);

        qty.setText("00");
        jPanel1.add(qty);
        qty.setBounds(570, 30, 60, 20);

        price.setText("00.0");
        jPanel1.add(price);
        price.setBounds(720, 30, 70, 20);
        jPanel1.add(qty_sel);
        qty_sel.setBounds(180, 90, 64, 22);

        tprice.setText("00.0");
        jPanel1.add(tprice);
        tprice.setBounds(380, 90, 130, 16);

        add.setText("add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add);
        add.setBounds(440, 140, 72, 22);

        jLabel6.setText("quantity");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(497, 30, 50, 16);

        jLabel7.setText("price");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(650, 30, 50, 16);

        jLabel8.setText("qty");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(100, 90, 17, 16);

        jLabel9.setText("price");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(296, 90, 50, 16);

        confirm.setText("confirm");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });
        jPanel1.add(confirm);
        confirm.setBounds(270, 140, 72, 22);

        remove.setText("remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        jPanel1.add(remove);
        remove.setBounds(610, 140, 72, 22);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.empScreenInterface.nextButtonOnBillingScreenPressed();
        
        
        for(cartmodel cartModel: cartmodellist)
        {
            inventoryModel inventorymodel = cartModel.getproduct();
            String a = inventorymodel.getQty();
            int i=Integer.parseInt(a);
            int finalQqty = i-cartModel.getbuyqty();
            String s=String.valueOf(finalQqty); 
            final String upatestatement = "update inventory set qty = ? where id = ?";
             try{
                PreparedStatement ps=com.mycompany.sorted_billing.ConnectionClass.getInstance().connection.prepareStatement(upatestatement);
                 ps.setString(1, s.toString());
                
                ps.setInt(2, inventorymodel.getID());
                 Boolean admin;
                admin = ps.execute();
             }
             catch (SQLException ex) {
                Logger.getLogger(emplo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        recipt recipt=new recipt();
        recipt.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        cartmodel cart=new cartmodel();
        int quantity = (int) qty_sel.getValue();
        
        final int selectedIndex = cat.getSelectedIndex();
        final inventoryModel inventorymodel = inventorylist.get(selectedIndex);
        
        int pricee;
        pricee = parseInt( inventorymodel.getPrice());
        
        cart.setproduct(inventorymodel);
        cart.setbuyqty(quantity);
        cart.setprice( pricee * quantity);
      
        cartmodellist.add(cart);

        setUpTableAndID();
        qty_sel.setValue(0);
        qty.setText("00");
        price.setText("00.0");
        tprice.setText("00.0");
    }//GEN-LAST:event_addActionPerformed

    private void catItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_catItemStateChanged
        
    }//GEN-LAST:event_catItemStateChanged

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        // TODO add your handling code here:
                 final inventoryModel selecteditem = inventorylist.get(cat.getSelectedIndex());
                      qty.setText(selecteditem.getQty());
                      
                      price.setText(selecteditem.getPrice());
                      int i=(int) qty_sel.getValue();
                      int j=Integer.parseInt(price.getText()); 
                      int qtyv=i*j;
                      String s=String.valueOf(qtyv);
                      tprice.setText(s);
    }//GEN-LAST:event_confirmActionPerformed

    private void billtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billtableMouseClicked
        // TODO add your handling 
    }//GEN-LAST:event_billtableMouseClicked

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        //billtable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
         int result = JOptionPane.showConfirmDialog(null,"Sure? You want to delete this product?", "delete product",
               JOptionPane.YES_NO_OPTION,
               JOptionPane.QUESTION_MESSAGE);
            if(result == JOptionPane.YES_OPTION){
                System.out.print("hello");
               if(billtable.getSelectedRow() != -1) {
               // remove selected row from the model
               cartmodellist.remove(billtable.getSelectedRow());
               System.out.print("hello1");
               setUpTableAndID();
               JOptionPane.showMessageDialog(null, "Selected row deleted successfully");
            }
            }
        
    }//GEN-LAST:event_removeActionPerformed

    private void setUpTableAndID() {
        final String[] headerName = {"Product Name","qty", "price"};
        DefaultTableModel tableModel = new DefaultTableModel(null, headerName);
        billtable.setModel(tableModel);
        Object[] row = new Object[3];
        
        int totalPrice = 0;
        
        for(cartmodel cartModel: cartmodellist){
            row[0] = cartModel.getproduct().getItem();
            row[1] = cartModel.getbuyqty();
            row[2] = cartModel.getprice();
            tableModel.addRow(row);
            int price=(int) cartModel.getprice();
            totalPrice=price+totalPrice;
        }
        String Totalp = Integer.toString(totalPrice);
        total.setText(Totalp);
        //
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTable billtable;
    private javax.swing.JComboBox<String> cat;
    private javax.swing.JButton confirm;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel price;
    private javax.swing.JLabel qty;
    private javax.swing.JSpinner qty_sel;
    private javax.swing.JButton remove;
    private javax.swing.JLabel total;
    private javax.swing.JLabel tprice;
    // End of variables declaration//GEN-END:variables

    private String getString(String product) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
